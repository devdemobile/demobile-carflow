
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ydvykagsvazvjqkncjxc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkdnlrYWdzdmF6dmpxa25janhjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0MDY2NDMsImV4cCI6MjA2Mjk4MjY0M30.szzlxoiGwG8T-I1Nf8nTBK4B6zuTfWkdSVMgHXdWuPk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY, 
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      storage: localStorage
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
        'X-Client-Info': '@supabase/js'
      }
    },
    db: {
      schema: 'public'
    },
    realtime: {
      timeout: 30000
    }
  }
);

// Função para verificar se o cliente está autenticado
export const isAuthenticated = async (): Promise<boolean> => {
  const { data } = await supabase.auth.getSession();
  return !!data.session;
};

// Função para obter o ID do usuário atual
export const getCurrentUserId = async (): Promise<string | null> => {
  const { data } = await supabase.auth.getSession();
  return data.session?.user?.id || null;
};
